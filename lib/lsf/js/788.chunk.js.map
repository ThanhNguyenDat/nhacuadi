{"version":3,"file":"static/js/788.chunk.js","mappings":"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","sources":["webpack://LabelStudio/webpack/universalModuleDefinition","webpack://LabelStudio/./src/lib/AudioUltra/Common/Worker/index.ts","webpack://LabelStudio/./src/lib/AudioUltra/Media/SplitChannelWorker.ts","webpack://LabelStudio/webpack/bootstrap","webpack://LabelStudio/webpack/runtime/define property getters","webpack://LabelStudio/webpack/runtime/harmony module decorator","webpack://LabelStudio/webpack/runtime/hasOwnProperty shorthand","webpack://LabelStudio/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LabelStudio\"] = factory();\n\telse\n\t\troot[\"LabelStudio\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn ","type MessengerResponder = (result: Record<string, any>) => void;\n\ntype MessengerCallback = (data: any, storage: Record<string, any>, respond: MessengerResponder) => void;\n\ntype MessengerInput = {\n  compute: MessengerCallback,\n  precompute?: MessengerCallback,\n}\n\nexport class ComputeWorker {\n  private worker: Worker;\n\n  static Messenger = {\n    receive({\n      compute: computeCallback,\n      precompute: precomputeCallback,\n    }: MessengerInput) {\n      const storage: Record<string, any> = {};\n\n      const storeData = (e: MessageEvent) => {\n        Object.assign(storage, e.data.data);\n      };\n\n      const compute = (data: any, eventId: string) => {\n        const respond = (result: Record<string, any>) => {\n          self.postMessage({\n            result,\n            eventId,\n          });\n        };\n\n        computeCallback(data, storage, respond);\n      };\n\n      const precompute = (data: any) => {\n        precomputeCallback?.(data, storage, (result) => {\n          Object.assign(storage, result);\n        });\n      };\n\n      const getStorage = (eventId: string) => {\n        self.postMessage({\n          result: storage,\n          eventId,\n        });\n      };\n\n      self.addEventListener('message', (e) => {\n        if (!e.data) return;\n\n        const { data, type, eventId } = e.data;\n\n        switch (type) {\n          case 'compute': compute(data, eventId); break;\n          case 'precompute': precompute(data); break;\n          case 'store': storeData(e); break;\n          case 'getStorage': getStorage(eventId); break;\n        }\n      });\n    },\n  };\n\n  constructor(url: Worker) {\n    this.worker = url;\n  }\n\n  async compute(data: Record<string, any>) {\n    const result = await this.sendMessage(this.worker, {\n      data,\n      type: 'compute',\n    }, true);\n\n    return result?.data?.result?.data;\n  }\n\n  async precompute(data: Record<string, any>) {\n    await this.sendMessage(this.worker, {\n      data,\n      type: 'precompute',\n    });\n  }\n\n  async store(data: Record<string, any>) {\n    await this.sendMessage(this.worker, {\n      data,\n      type: 'store',\n    });\n  }\n\n  async getStorage() {\n    const response = await this.sendMessage(this.worker, {\n      type: 'getStorage',\n    }, true);\n\n    return response?.data?.result;\n  }\n\n  destroy() {\n    this.worker.terminate();\n  }\n\n  private sendMessage(worker: Worker, data: Record<string, any>, waitResponse = false) {\n    return new Promise<MessageEvent | undefined>((resolve) => {\n      const eventId = Math.random().toString();\n\n      if (waitResponse) {\n        const resolver = (e: MessageEvent) => {\n          if (eventId === e.data.eventId) {\n            worker.removeEventListener('message', resolver);\n            resolve(e);\n          }\n        };\n\n        worker.addEventListener('message', resolver);\n      }\n\n      worker.postMessage({ ...data, eventId });\n\n      if (!waitResponse) resolve(undefined);\n    });\n  }\n}\n","import { ComputeWorker } from '../Common/Worker';\n\nexport function splitChannels({\n  value,\n  channelCount,\n}: {\n  value: Float32Array,\n  channelCount: number,\n}) : Float32Array[] {\n  const channels: Float32Array[] = [];\n\n  // Create new Float32Array for each channel\n  for (let c = 0; c < channelCount; c++) {\n    channels[c] = new Float32Array(value.length / channelCount);\n  }\n\n  // Split the channels into separate Float32Array samples\n  for (let sample = 0; sample < value.length; sample++) {\n    // interleaved channels\n    // ie. 2 channels\n    // [channel1, channel2, channel1, channel2, ...]\n    const channel = sample % channelCount;\n    // index of the channel sample\n    // ie. 2 channels\n    // sample = 8, channel = 0, channelIndex = 4\n    // sample = 9, channel = 1, channelIndex = 4\n    // sample = 10, channel = 0, channelIndex = 5\n    // sample = 11, channel = 1, channelIndex = 5\n    const channelIndex = Math.floor(sample / channelCount);\n\n    channels[channel][channelIndex] = value[sample];\n  }\n\n  return channels;\n}\n\nComputeWorker.Messenger.receive({\n  compute: (data, _storage, respond) => {\n    respond({\n      data: splitChannels(data),\n    });\n  },\n\n  precompute: (data, _storage, respond) => {\n    respond({\n      data: splitChannels(data),\n    });\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(70788);\n"],"names":["root","factory","exports","module","define","amd","self","this","reactHotLoader","leaveModule","ComputeWorker","constructor","url","_defineProperty","worker","compute","data","_result$data","_result$data$result","result","sendMessage","type","precompute","store","getStorage","_response$data","response","destroy","terminate","waitResponse","Promise","resolve","eventId","Math","random","toString","resolver","e","removeEventListener","addEventListener","postMessage","undefined","__reactstandin__regenerateByEval","key","code","eval","receive","computeCallback","precomputeCallback","storage","Object","assign","storeData","reactHotLoaderGlobal","default","register","splitChannels","value","channelCount","channels","c","Float32Array","length","sample","channel","channelIndex","floor","Messenger","_storage","respond","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","hmd","create","children","set","Error","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__"],"sourceRoot":""}